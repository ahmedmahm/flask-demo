name: Deploy

on:
  push:
    branches:
    - "master"
      
jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash
      - uses: rlespinasse/github-slug-action@master
      - uses: mr-smithers-excellent/docker-build-push@v3
        with:
          image: ${{ env.REPOSITORY_NAME }}
          tag: ${{ env.GITHUB_REF_SLUG }}
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: build_image
    steps:
      - uses: azure/aks-set-context@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          resource-group: development-rg
          cluster-name: development-aks
      - run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
      - run: mkdir -p ~/.kube && cp ${KUBECONFIG} ~/.kube/config
      - uses: hashicorp/setup-terraform@v1
      - uses: azure/setup-kubectl@v1
      - run: kubectl create ns ${REPOSITORY_NAME} --dry-run=client --output yaml | kubectl apply -f -
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      - run: kubectl patch deployment ${GITHUB_REF_SLUG} --namespace ${REPOSITORY_NAME} -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"